<%= render "barcode_scan_mode_detection", start_disabled: (start_disabled rescue false) %>
<%= render "dataentry_commons_input_group" %>

<%= render "dataentry_commons_data_container", hide_action: (hide_action rescue true)%>

<%= render "dataentry_commons_data_action" %>
<script>
    var code;
    var returnedData;
    var additionalData = {};
    var disableKeyManagement = false;
    var cleanBarcode = true;

    function resetInfo() {
        returnedData = code = undefined;
        if (cleanBarcode) $("#barcode").empty();
        $("#data-info").empty().hide();
        $("#data-content").empty().hide();
        <%-unless (hide_action rescue true)%>
        $("#data-action").hide();
        <%-end%>
    }

    // These functions can be overridden in the containing file
    function setAll() {
        $("#data-info").show();
        $("#data-content").show();
        <%-unless (hide_action rescue true)%>
        $("#data-action").show();
        <%-end%>
    }

    function resetAll() {
        // Resetting all to the starting condition
        resetCurrentBtn();
        resetInfo();
    }

    function contentHtmlString(data){
        return $("<span>" + data.barcode + "</span>");
    }

    function barcodeScannedSuccess(data, status) {
        returnedData = data;
        if(disableKeyManagement)
            $(window).off('keydown');
        // Cleaning up
        $("#data-content").empty().hide();
        // Setting info already formatted from the controller
        $("#data-info").html(data.info);
        // Setting returned content
        var appended = contentHtmlString(data).appendTo("#data-content");
        // $("#data-content").switchClass("alert-warning", "alert-success", 800).switchClass("alert-success", "alert-warning",800);
        setAll();
        $("#data-action").focus();
        resetCurrentBtn();
        return appended;
    }

    function barcodeScannedThen(appended){}

    function barcodeScannedFailure(errorObj) {
        returnedData = errorObj.responseJSON;
        // Showing modal error
        var primary = null
        var secondary = null
        if (errorObj.responseJSON.primary_btn)
            primary = window[errorObj.responseJSON.primary_btn];
        if (errorObj.responseJSON.secondary_btn)
            secondary = window[errorObj.responseJSON.secondary_btn];
        openModal("<%=t :error %>", errorObj.responseJSON.error, primary, secondary);
        if(!primary && !secondary)
            resetAll();
    }

    <%-unless (hide_action rescue true)%>
    dataAction.init();
    <%-end%>
    // END of overridable functions

    // Operation on barcode scan
    function sendFunction() {
        code = $('#barcode');
        code.prop('disabled', true);
        $(this).button('loading');
        $.get('<%=rails_admin.send("#{action_name}_path")%>', {
            barcode: code.val(),
            parameters: additionalData
        }).then(barcodeScannedSuccess).done(barcodeScannedThen).fail(barcodeScannedFailure);
    }

    <%-if (start_disabled rescue false)%>
    $('#send').off('click', sendFunction);
    <%-else%>
    $('#send').on('click', sendFunction);
    <%-end%>

    // Starting with a clean interface
    resetInfo();
</script>

<%= render "dataentry_commons_input_group_logic", start_disabled: (start_disabled rescue false) %>
